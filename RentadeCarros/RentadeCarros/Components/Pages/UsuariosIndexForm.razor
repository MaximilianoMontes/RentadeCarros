@page "/usuarios/nuevo"
@page "/usuarios/editar/{Id:int}"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioUsuarios _repositorio;
<h2>@_mensaje Usuarios</h2>

<EditForm Model="_usuarios" FormName="frmUsuarios" OnValidSubmit="Guardar">
    <DataAnnotationsValidator/>
    <div class="row mb-3">
        <label for="txtNombre" class="col-2 col-form-label">Nombre</label>
        <div class="col-10">
            <InputText id="txtNombre" class="form-control" @bind-Value="_usuarios.Nombre"/>
            <ValidationMessage For="()=>_usuarios.Nombre"/>
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtCorreo" class="col-2 col-form-label">Correo</label>
        <div class="col-10">
            <InputText id="txtCorreo" class="form-control" @bind-Value="_usuarios.Correo" />
            <ValidationMessage For="()=>_usuarios.Correo" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtNumTelefonico" class="col-2 col-form-label">NumTelefonico</label>
        <div class="col-10">
            <InputText id="txtNumTelefonico" class="form-control" @bind-Value="_usuarios.NumTelefonico" />
            <ValidationMessage For="()=>_usuarios.NumTelefonico" />
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
    <button class="btn btn-danger ms-3" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>
</EditForm>
@code {
    [Parameter]
    public int Id { get; set; }
    private string _mensaje = "";
    private Usuarios? _usuarios = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            _usuarios = await _repositorio.Get(Id);
            _mensaje = "Modificar";
        }
        else
        {
            _mensaje = "Nueva";
        }
    }
    private async void Guardar()
    {
        if(Id> 0)
        {
            await _repositorio.Update(Id, _usuarios!);
        }
        else
        {
            await _repositorio.Add(_usuarios!);
        }
        Cancelar();
    }
    private void Cancelar()
    {
        _navigator.NavigateTo("/usuarios");
    }
}
